/*! For license information please see createVectorTilePoints.js.LICENSE.txt */
import{a as x}from"./chunk-2SKW2VRQ.js";import{a as w}from"./chunk-IYTTCRXN.js";import{c}from"./chunk-KDW4RGIR.js";import"./chunk-VNDUYYBJ.js";import{a as h,b as l,c as p}from"./chunk-V624RX7A.js";import{a as i}from"./chunk-VZ2RFJ3P.js";import"./chunk-RN5GA5QZ.js";import"./chunk-TWC6ISJU.js";import"./chunk-RKPKWH3Z.js";import"./chunk-BIYNNQRQ.js";import"./chunk-ZLUSVROX.js";var u=32767,F=new l,L=new h,b=new c,y=new p,a={min:void 0,max:void 0};function V(r){r=new Float64Array(r);let n=0;a.min=r[n++],a.max=r[n++],c.unpack(r,n,b),n+=c.packedLength,p.unpack(r,n,y)}function z(r,n){let t=new Uint16Array(r.positions);V(r.packedBuffer);let o=b,e=y,s=a.min,p=a.max,c=t.length/3,m=t.subarray(0,c),f=t.subarray(c,2*c),k=t.subarray(2*c,3*c);w.zigZagDeltaDecode(m,f,k);let j=new Float64Array(t.length);for(let a=0;a<c;++a){let r=m[a],n=f[a],t=k[a],c=i.lerp(o.west,o.east,r/u),R=i.lerp(o.south,o.north,n/u),w=i.lerp(s,p,t/u),b=l.fromRadians(c,R,w,F),y=e.cartographicToCartesian(b,L);h.pack(y,j,3*a)}return n.push(j.buffer),{positions:j.buffer}}var G=x(z);export{G as default};