/*! For license information please see createRectangleOutlineGeometry.js.LICENSE.txt */
import{a as N}from"./chunk-CVXUMG7J.js";import{a as z}from"./chunk-2DNLGXTL.js";import{b as B}from"./chunk-TU5B2BXL.js";import"./chunk-EOT3UPEC.js";import{a as O}from"./chunk-EQ7PMEBC.js";import{a as F}from"./chunk-FDDSRMXI.js";import{b as q,c as x,d as v}from"./chunk-YYYI3I6L.js";import{d as C}from"./chunk-YIFABOF6.js";import"./chunk-PQVQONHO.js";import{c as m}from"./chunk-KDW4RGIR.js";import{a as y}from"./chunk-VNDUYYBJ.js";import{a as M,b as Y,c as b}from"./chunk-V624RX7A.js";import{a as P}from"./chunk-VZ2RFJ3P.js";import"./chunk-RN5GA5QZ.js";import"./chunk-TWC6ISJU.js";import{a as A}from"./chunk-RKPKWH3Z.js";import{a as k}from"./chunk-BIYNNQRQ.js";import{e as S}from"./chunk-ZLUSVROX.js";var j=new C,K=new C,Q=new M,X=new m;function V(t,e){let i=t._ellipsoid,r=e.height,o=e.width,n=e.northCap,a=e.southCap,s=r,l=2,u=0,c=4;n&&(l-=1,s-=1,u+=1,c-=2),a&&(l-=1,s-=1,u+=1,c-=2),u+=l*o+2*s-c;let h,p=new Float64Array(3*u),f=0,m=0,g=Q;if(n)N.computePosition(e,i,!1,m,0,g),p[f++]=g.x,p[f++]=g.y,p[f++]=g.z;else for(h=0;h<o;h++)N.computePosition(e,i,!1,m,h,g),p[f++]=g.x,p[f++]=g.y,p[f++]=g.z;for(h=o-1,m=1;m<r;m++)N.computePosition(e,i,!1,m,h,g),p[f++]=g.x,p[f++]=g.y,p[f++]=g.z;if(m=r-1,!a)for(h=o-2;h>=0;h--)N.computePosition(e,i,!1,m,h,g),p[f++]=g.x,p[f++]=g.y,p[f++]=g.z;for(h=0,m=r-2;m>0;m--)N.computePosition(e,i,!1,m,h,g),p[f++]=g.x,p[f++]=g.y,p[f++]=g.z;let d=p.length/3*2,_=O.createTypedArray(p.length/3,d),b=0;for(let t=0;t<p.length/3-1;t++)_[b++]=t,_[b++]=t+1;_[b++]=p.length/3-1,_[b++]=0;let k=new x({attributes:new F,primitiveType:q.LINES});return k.attributes.position=new v({componentDatatype:y.DOUBLE,componentsPerAttribute:3,values:p}),k.indices=_,k}function Z(t,e){let i=t._surfaceHeight,r=t._extrudedHeight,o=t._ellipsoid,n=r,a=i,s=V(t,e),l=e.height,u=e.width,c=B.scaleToGeodeticHeight(s.attributes.position.values,a,o,!1),h=c.length,p=new Float64Array(2*h);p.set(c);let f=B.scaleToGeodeticHeight(s.attributes.position.values,n,o);p.set(f,h),s.attributes.position.values=p;let m=e.northCap,g=e.southCap,d=4;m&&(d-=1),g&&(d-=1);let _=2*(p.length/3+d),b=O.createTypedArray(p.length/3,_);h=p.length/6;let k,A=0;for(let t=0;t<h-1;t++)b[A++]=t,b[A++]=t+1,b[A++]=t+h,b[A++]=t+h+1;if(b[A++]=h-1,b[A++]=0,b[A++]=h+h-1,b[A++]=h,b[A++]=0,b[A++]=h,m)k=l-1;else{let t=u-1;b[A++]=t,b[A++]=t+h,k=u+l-2}if(b[A++]=k,b[A++]=k+h,!g){let t=u+k-1;b[A++]=t,b[A]=t+h}return s.indices=b,s}function D(t){let e=(t=A(t,A.EMPTY_OBJECT)).rectangle,i=A(t.granularity,P.RADIANS_PER_DEGREE),r=A(t.ellipsoid,b.WGS84),o=A(t.rotation,0);if(!S(e))throw new k("rectangle is required.");if(m.validate(e),e.north<e.south)throw new k("options.rectangle.north must be greater than options.rectangle.south");let n=A(t.height,0),a=A(t.extrudedHeight,n);this._rectangle=m.clone(e),this._granularity=i,this._ellipsoid=r,this._surfaceHeight=Math.max(n,a),this._rotation=o,this._extrudedHeight=Math.min(n,a),this._offsetAttribute=t.offsetAttribute,this._workerName="createRectangleOutlineGeometry"}D.packedLength=m.packedLength+b.packedLength+5,D.pack=function(t,e,i){if(!S(t))throw new k("value is required");if(!S(e))throw new k("array is required");return i=A(i,0),m.pack(t._rectangle,e,i),i+=m.packedLength,b.pack(t._ellipsoid,e,i),i+=b.packedLength,e[i++]=t._granularity,e[i++]=t._surfaceHeight,e[i++]=t._rotation,e[i++]=t._extrudedHeight,e[i]=A(t._offsetAttribute,-1),e};var J=new m,W=b.clone(b.UNIT_SPHERE),L={rectangle:J,ellipsoid:W,granularity:void 0,height:void 0,rotation:void 0,extrudedHeight:void 0,offsetAttribute:void 0};D.unpack=function(t,e,i){if(!S(t))throw new k("array is required");e=A(e,0);let r=m.unpack(t,e,J);e+=m.packedLength;let o=b.unpack(t,e,W);e+=b.packedLength;let n=t[e++],a=t[e++],s=t[e++],l=t[e++],u=t[e];return S(i)?(i._rectangle=m.clone(r,i._rectangle),i._ellipsoid=b.clone(o,i._ellipsoid),i._surfaceHeight=a,i._rotation=s,i._extrudedHeight=l,i._offsetAttribute=-1===u?void 0:u,i):(L.granularity=n,L.height=a,L.rotation=s,L.extrudedHeight=l,L.offsetAttribute=-1===u?void 0:u,new D(L))};var $=new Y;D.createGeometry=function(t){let e,i,r=t._rectangle,o=t._ellipsoid,n=N.computeOptions(r,t._granularity,t._rotation,0,X,$);if(P.equalsEpsilon(r.north,r.south,P.EPSILON10)||P.equalsEpsilon(r.east,r.west,P.EPSILON10))return;let a,s=t._surfaceHeight,l=t._extrudedHeight;if(P.equalsEpsilon(s,l,0,P.EPSILON2)){if(e=V(t,n),e.attributes.position.values=B.scaleToGeodeticHeight(e.attributes.position.values,s,o,!1),S(t._offsetAttribute)){let i=e.attributes.position.values.length;a=t._offsetAttribute===z.NONE?0:1;let r=new Uint8Array(i/3).fill(a);e.attributes.applyOffset=new v({componentDatatype:y.UNSIGNED_BYTE,componentsPerAttribute:1,values:r})}i=C.fromRectangle3D(r,o,s)}else{if(e=Z(t,n),S(t._offsetAttribute)){let i=e.attributes.position.values.length/3,r=new Uint8Array(i);t._offsetAttribute===z.TOP?r=r.fill(1,0,i/2):(a=t._offsetAttribute===z.NONE?0:1,r=r.fill(a)),e.attributes.applyOffset=new v({componentDatatype:y.UNSIGNED_BYTE,componentsPerAttribute:1,values:r})}let u=C.fromRectangle3D(r,o,s,K),c=C.fromRectangle3D(r,o,l,j);i=C.union(u,c)}return new x({attributes:e.attributes,indices:e.indices,primitiveType:q.LINES,boundingSphere:i,offsetAttribute:t._offsetAttribute})};var U=D;function G(t,e){return S(e)&&(t=U.unpack(t,e)),t._ellipsoid=b.clone(t._ellipsoid),t._rectangle=m.clone(t._rectangle),U.createGeometry(t)}var Ht=G;export{Ht as default};