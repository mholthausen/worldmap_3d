/*! For license information please see createVectorTilePolygons.js.LICENSE.txt */
import{a as R}from"./chunk-GUUUD723.js";import{a as It}from"./chunk-R7GRRUJS.js";import{a as M}from"./chunk-HRTRKKEE.js";import{a as bt}from"./chunk-FZIR7YHL.js";import"./chunk-JATOGJGF.js";import"./chunk-U54QHQ4X.js";import"./chunk-EQAHH27B.js";import"./chunk-LWO5EUNN.js";import{a as W}from"./chunk-SPMRTIBU.js";import"./chunk-LYPPBP4Q.js";import"./chunk-PCFGFNNQ.js";import"./chunk-V2SDNSQR.js";import{c as z}from"./chunk-S7TTFAYA.js";import"./chunk-TLYHKSDJ.js";import{a as o,b as nt,d as j}from"./chunk-PYVDHCDQ.js";import{a as et}from"./chunk-JMWWNZHX.js";import"./chunk-DNO4OWAM.js";import"./chunk-XDVDNOI4.js";import"./chunk-Z3SYNMQT.js";import"./chunk-4KGDZUZQ.js";import{e as A}from"./chunk-F3TINEFX.js";var kt=new o,Bt=new j,Nt=new z,E={min:void 0,max:void 0,indexBytesPerElement:void 0};function Pt(t){let e=new Float64Array(t),n=0;E.indexBytesPerElement=e[n++],E.min=e[n++],E.max=e[n++],o.unpack(e,n,kt),n+=o.packedLength,j.unpack(e,n,Bt),n+=j.packedLength,z.unpack(e,n,Nt)}function Tt(t){let e=t.length,n=0;for(let r=0;r<e;++r)n+=R.packedLength+3+t[r].batchIds.length;return n}function Ct(t,e,n){let r=e.length,o=2+r*M.packedLength+1+Tt(n),a=new Float64Array(o),i=0;a[i++]=t,a[i++]=r;for(let t=0;t<r;++t)M.pack(e[t],a,i),i+=M.packedLength;let s=n.length;a[i++]=s;for(let t=0;t<s;++t){let e=n[t];R.pack(e.color,a,i),i+=R.packedLength,a[i++]=e.offset,a[i++]=e.count;let r=e.batchIds,o=r.length;a[i++]=o;for(let t=0;t<o;++t)a[i++]=r[t]}return a}var yt=32767,wt=new o,Ht=new o,St=new o,Ut=new o,Ft=new o,Lt=new nt,Mt=new z;function Rt(t,e){let n;Pt(t.packedBuffer),n=2===E.indexBytesPerElement?new Uint16Array(t.indices):new Uint32Array(t.indices);let r=new Uint16Array(t.positions),a=new Uint32Array(t.counts),i=new Uint32Array(t.indexCounts),s=new Uint32Array(t.batchIds),f=new Uint32Array(t.batchTableColors),c=new Array(a.length),h=kt,l=Bt,u=Nt,m=E.min,p=E.max,d=t.minimumHeights,k=t.maximumHeights;A(d)&&A(k)&&(d=new Float32Array(d),k=new Float32Array(k));let g,I,w,b=r.length/2,y=r.subarray(0,b),N=r.subarray(b,2*b);bt.zigZagDeltaDecode(y,N);let T=new Float64Array(3*b);for(g=0;g<b;++g){let t=y[g],e=N[g],n=et.lerp(u.west,u.east,t/yt),r=et.lerp(u.south,u.north,e/yt),a=nt.fromRadians(n,r,0,Lt),i=l.cartographicToCartesian(a,wt);o.pack(i,T,3*g)}let j=a.length,x=new Array(j),L=new Array(j),U=0,F=0;for(g=0;g<j;++g)x[g]=U,L[g]=F,U+=a[g],F+=i[g];let S=new Float32Array(3*b*2),O=new Uint16Array(2*b),P=new Uint32Array(L.length),B=new Uint32Array(i.length),D=[],H={};for(g=0;g<j;++g)w=f[g],A(H[w])?(H[w].positionLength+=a[g],H[w].indexLength+=i[g],H[w].batchIds.push(g)):H[w]={positionLength:a[g],indexLength:i[g],offset:0,indexOffset:0,batchIds:[g]};let G,Y=0,C=0;for(w in H)if(H.hasOwnProperty(w)){G=H[w],G.offset=Y,G.indexOffset=C;let t=2*G.positionLength,e=2*G.indexLength+6*G.positionLength;Y+=t,C+=e,G.indexLength=e}let Q=[];for(w in H)H.hasOwnProperty(w)&&(G=H[w],Q.push({color:R.fromRgba(parseInt(w)),offset:G.indexOffset,count:G.indexLength,batchIds:G.batchIds}));for(g=0;g<j;++g){w=f[g],G=H[w];let t=G.offset,e=3*t,r=t,b=x[g],y=a[g],N=s[g],E=m,j=p;A(d)&&A(k)&&(E=d[g],j=k[g]);let U=Number.POSITIVE_INFINITY,R=Number.NEGATIVE_INFINITY,F=Number.POSITIVE_INFINITY,Y=Number.NEGATIVE_INFINITY;for(I=0;I<y;++I){let t=o.unpack(T,3*b+3*I,wt);l.scaleToGeodeticSurface(t,t);let n=l.cartesianToCartographic(t,Lt),a=n.latitude,i=n.longitude;U=Math.min(a,U),R=Math.max(a,R),F=Math.min(i,F),Y=Math.max(i,Y);let s=l.geodeticSurfaceNormal(t,Ht),f=o.multiplyByScalar(s,E,St),c=o.add(t,f,Ut);f=o.multiplyByScalar(s,j,f);let u=o.add(t,f,Ft);o.subtract(u,h,u),o.subtract(c,h,c),o.pack(u,S,e),o.pack(c,S,e+3),O[r]=N,O[r+1]=N,e+=6,r+=2}u=Mt,u.west=F,u.east=Y,u.south=U,u.north=R,c[g]=M.fromRectangle(u,m,p,l);let C=G.indexOffset,Q=L[g],W=i[g];for(P[g]=C,I=0;I<W;I+=3){let e=n[Q+I]-b,r=n[Q+I+1]-b,o=n[Q+I+2]-b;D[C++]=2*e+t,D[C++]=2*r+t,D[C++]=2*o+t,D[C++]=2*o+1+t,D[C++]=2*r+1+t,D[C++]=2*e+1+t}for(I=0;I<y;++I){let e=I,n=(I+1)%y;D[C++]=2*e+1+t,D[C++]=2*n+t,D[C++]=2*e+t,D[C++]=2*e+1+t,D[C++]=2*n+1+t,D[C++]=2*n+t}G.offset+=2*y,G.indexOffset=C,B[g]=C-P[g]}D=W.createTypedArray(S.length/3,D);let _=Q.length;for(let t=0;t<_;++t){let e=Q[t].batchIds,n=0,r=e.length;for(let t=0;t<r;++t)n+=B[e[t]];Q[t].count=n}let J=Ct(2===D.BYTES_PER_ELEMENT?W.UNSIGNED_SHORT:W.UNSIGNED_INT,c,Q);return e.push(S.buffer,D.buffer,P.buffer,B.buffer,O.buffer,J.buffer),{positions:S.buffer,indices:D.buffer,indexOffsets:P.buffer,indexCounts:B.buffer,batchIds:O.buffer,packedBuffer:J.buffer}}var Jt=It(Rt);export{Jt as default};