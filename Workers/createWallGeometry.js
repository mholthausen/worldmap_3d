/*! For license information please see createWallGeometry.js.LICENSE.txt */
import{a as nt}from"./chunk-QF6LI2WV.js";import"./chunk-WCO3MWIK.js";import"./chunk-BQNAZUCV.js";import{a as w}from"./chunk-KA7ZX4BQ.js";import"./chunk-IOJRZZG4.js";import"./chunk-QF5X4OGE.js";import"./chunk-S3NLG5WM.js";import"./chunk-AAOMPF7M.js";import{a as ot}from"./chunk-PFXLBIMV.js";import{a as it}from"./chunk-PSBTKXXJ.js";import{b as tt,c as et,d as R}from"./chunk-UJOKCDQH.js";import{d as I}from"./chunk-KYREMICR.js";import"./chunk-VBRVI5XI.js";import{a as N}from"./chunk-5ZFOKSDK.js";import{a as s,d as l,f as K}from"./chunk-7L2LUDC3.js";import{a as V}from"./chunk-77KFIUJG.js";import"./chunk-7W3OTLHS.js";import"./chunk-X52A3GF7.js";import{a as y}from"./chunk-PX3QTMVS.js";import{e as r}from"./chunk-FE4HG5RY.js";var Q=new s,J=new s,lt=new s,st=new s,pt=new s,ut=new s,ft=new s;function E(t){let e=(t=t??K.EMPTY_OBJECT).positions,i=t.maximumHeights,n=t.minimumHeights;if(!r(e))throw new y("options.positions is required.");if(r(i)&&i.length!==e.length)throw new y("options.positions and options.maximumHeights must have the same length.");if(r(n)&&n.length!==e.length)throw new y("options.positions and options.minimumHeights must have the same length.");let o=t.vertexFormat??w.DEFAULT,a=t.granularity??V.RADIANS_PER_DEGREE,m=t.ellipsoid??l.default;this._positions=e,this._minimumHeights=n,this._maximumHeights=i,this._vertexFormat=w.clone(o),this._granularity=a,this._ellipsoid=l.clone(m),this._workerName="createWallGeometry";let p=1+e.length*s.packedLength+2;r(n)&&(p+=n.length),r(i)&&(p+=i.length),this.packedLength=p+l.packedLength+w.packedLength+1}E.pack=function(t,e,i){if(!r(t))throw new y("value is required");if(!r(e))throw new y("array is required");i=i??0;let n,o=t._positions,a=o.length;for(e[i++]=a,n=0;n<a;++n,i+=s.packedLength)s.pack(o[n],e,i);let m=t._minimumHeights;if(a=r(m)?m.length:0,e[i++]=a,r(m))for(n=0;n<a;++n)e[i++]=m[n];let p=t._maximumHeights;if(a=r(p)?p.length:0,e[i++]=a,r(p))for(n=0;n<a;++n)e[i++]=p[n];return l.pack(t._ellipsoid,e,i),i+=l.packedLength,w.pack(t._vertexFormat,e,i),e[i+=w.packedLength]=t._granularity,e};var mt=l.clone(l.UNIT_SPHERE),rt=new w,U={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:mt,vertexFormat:rt,granularity:void 0};E.unpack=function(t,e,i){if(!r(t))throw new y("array is required");e=e??0;let n,o,a,m=t[e++],p=new Array(m);for(n=0;n<m;++n,e+=s.packedLength)p[n]=s.unpack(t,e);if(m=t[e++],m>0)for(o=new Array(m),n=0;n<m;++n)o[n]=t[e++];if(m=t[e++],m>0)for(a=new Array(m),n=0;n<m;++n)a[n]=t[e++];let u=l.unpack(t,e,mt);e+=l.packedLength;let h=w.unpack(t,e,rt),c=t[e+=w.packedLength];return r(i)?(i._positions=p,i._minimumHeights=o,i._maximumHeights=a,i._ellipsoid=l.clone(u,i._ellipsoid),i._vertexFormat=w.clone(h,i._vertexFormat),i._granularity=c,i):(U.positions=p,U.minimumHeights=o,U.maximumHeights=a,U.granularity=c,new E(U))},E.fromConstantHeights=function(t){let e=(t=t??K.EMPTY_OBJECT).positions;if(!r(e))throw new y("options.positions is required.");let i,n,o=t.minimumHeight,s=t.maximumHeight,a=r(o),m=r(s);if(a||m){let t=e.length;i=a?new Array(t):void 0,n=m?new Array(t):void 0;for(let e=0;e<t;++e)a&&(i[e]=o),m&&(n[e]=s)}return new E({positions:e,maximumHeights:n,minimumHeights:i,ellipsoid:t.ellipsoid,vertexFormat:t.vertexFormat})},E.createGeometry=function(t){let e=t._positions,i=t._minimumHeights,n=t._maximumHeights,o=t._vertexFormat,a=t._granularity,m=t._ellipsoid,l=nt.computePositions(m,e,n,i,a,!0);if(!r(l))return;let p=l.bottomPositions,u=l.topPositions,h=l.numCorners,c=u.length,g=2*c,f=o.position?new Float64Array(g):void 0,w=o.normal?new Float32Array(g):void 0,y=o.tangent?new Float32Array(g):void 0,d=o.bitangent?new Float32Array(g):void 0,k=o.st?new Float32Array(g/3*2):void 0,A=0,_=0,v=0,E=0,x=0,F=ft,H=ut,L=pt,j=!0;c/=3;let b,O=0,P=1/(c-h-1);for(b=0;b<c;++b){let t=3*b,e=s.fromArray(u,t,Q),i=s.fromArray(p,t,J);if(o.position&&(f[A++]=i.x,f[A++]=i.y,f[A++]=i.z,f[A++]=e.x,f[A++]=e.y,f[A++]=e.z),o.st&&(k[x++]=O,k[x++]=0,k[x++]=O,k[x++]=1),o.normal||o.tangent||o.bitangent){let i=s.clone(s.ZERO,st),n=s.subtract(e,m.geodeticSurfaceNormal(e,J),J);if(b+1<c&&(i=s.fromArray(u,t+3,st)),j){let t=s.subtract(i,e,lt),r=s.subtract(n,e,Q);F=s.normalize(s.cross(r,t,F),F),j=!1}s.equalsEpsilon(e,i,V.EPSILON10)?j=!0:(O+=P,o.tangent&&(H=s.normalize(s.subtract(i,e,H),H)),o.bitangent&&(L=s.normalize(s.cross(F,H,L),L))),o.normal&&(w[_++]=F.x,w[_++]=F.y,w[_++]=F.z,w[_++]=F.x,w[_++]=F.y,w[_++]=F.z),o.tangent&&(y[E++]=H.x,y[E++]=H.y,y[E++]=H.z,y[E++]=H.x,y[E++]=H.y,y[E++]=H.z),o.bitangent&&(d[v++]=L.x,d[v++]=L.y,d[v++]=L.z,d[v++]=L.x,d[v++]=L.y,d[v++]=L.z)}}let T=new it;o.position&&(T.position=new R({componentDatatype:N.DOUBLE,componentsPerAttribute:3,values:f})),o.normal&&(T.normal=new R({componentDatatype:N.FLOAT,componentsPerAttribute:3,values:w})),o.tangent&&(T.tangent=new R({componentDatatype:N.FLOAT,componentsPerAttribute:3,values:y})),o.bitangent&&(T.bitangent=new R({componentDatatype:N.FLOAT,componentsPerAttribute:3,values:d})),o.st&&(T.st=new R({componentDatatype:N.FLOAT,componentsPerAttribute:2,values:k}));let U=g/3;g-=6*(h+1);let D=ot.createTypedArray(U,g),S=0;for(b=0;b<U-2;b+=2){let t=b,e=b+2,i=s.fromArray(f,3*t,Q),n=s.fromArray(f,3*e,J);if(s.equalsEpsilon(i,n,V.EPSILON10))continue;let r=b+1,o=b+3;D[S++]=r,D[S++]=t,D[S++]=o,D[S++]=o,D[S++]=t,D[S++]=e}return new et({attributes:T,indices:D,primitiveType:tt.TRIANGLES,boundingSphere:new I.fromVertices(f)})};var X=E;function ht(t,e){return r(e)&&(t=X.unpack(t,e)),t._ellipsoid=l.clone(t._ellipsoid),X.createGeometry(t)}var Ot=ht;export{Ot as default};