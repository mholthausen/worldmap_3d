/*! For license information please see createRectangleGeometry.js.LICENSE.txt */
import{a as W}from"./chunk-TG7CPYPR.js";import{a as Nt}from"./chunk-6NNCMAGT.js";import{a as zt}from"./chunk-X76FJHF4.js";import"./chunk-NYNUONZK.js";import"./chunk-5YCKGPZ3.js";import{a as ft}from"./chunk-O4MLFQKO.js";import{a as q}from"./chunk-KA7ZX4BQ.js";import{b as yt}from"./chunk-452MW5E6.js";import"./chunk-QF5X4OGE.js";import"./chunk-S3NLG5WM.js";import"./chunk-AAOMPF7M.js";import{a as At}from"./chunk-PFXLBIMV.js";import{a as Vt}from"./chunk-PSBTKXXJ.js";import{b as Mt,c as Pt,d as Y}from"./chunk-UJOKCDQH.js";import{d as at}from"./chunk-KYREMICR.js";import{f as Lt,h as E,i as bt}from"./chunk-VBRVI5XI.js";import{a as U}from"./chunk-5ZFOKSDK.js";import{a as w,b as mt,c as $,d as D,e as lt,f as St}from"./chunk-7L2LUDC3.js";import{a as I}from"./chunk-77KFIUJG.js";import"./chunk-7W3OTLHS.js";import"./chunk-X52A3GF7.js";import{a as Et,b as ct}from"./chunk-PX3QTMVS.js";import{e as K}from"./chunk-FE4HG5RY.js";var Tt=new w,Bt=new w,Ut=new w,Yt=new w,qt=new E,Zt=new $,Kt=new at,$t=new at;function Xt(t,e){let n=new Pt({attributes:new Vt,primitiveType:Mt.TRIANGLES});return n.attributes.position=new Y({componentDatatype:U.DOUBLE,componentsPerAttribute:3,values:e.positions}),t.normal&&(n.attributes.normal=new Y({componentDatatype:U.FLOAT,componentsPerAttribute:3,values:e.normals})),t.tangent&&(n.attributes.tangent=new Y({componentDatatype:U.FLOAT,componentsPerAttribute:3,values:e.tangents})),t.bitangent&&(n.attributes.bitangent=new Y({componentDatatype:U.FLOAT,componentsPerAttribute:3,values:e.bitangents})),n}function Gt(t,e,n,o){let a=t.length,r=e.normal?new Float32Array(a):void 0,i=e.tangent?new Float32Array(a):void 0,s=e.bitangent?new Float32Array(a):void 0,l=0,u=Yt,c=Ut,m=Bt;if(e.normal||e.tangent||e.bitangent)for(let p=0;p<a;p+=3){let a=w.fromArray(t,p,Tt),h=l+1,f=l+2;m=n.geodeticSurfaceNormal(a,m),(e.tangent||e.bitangent)&&(w.cross(w.UNIT_Z,m,c),lt.multiplyByVector(o,c,c),w.normalize(c,c),e.bitangent&&w.normalize(w.cross(m,c,u),u)),e.normal&&(r[l]=m.x,r[h]=m.y,r[f]=m.z),e.tangent&&(i[l]=c.x,i[h]=c.y,i[f]=c.z),e.bitangent&&(s[l]=u.x,s[h]=u.y,s[f]=u.z),l+=3}return Xt(e,{positions:t,normals:r,tangents:i,bitangents:s})}var Ct=new w,jt=new w;function te(t,e,n){let o=t.length,a=e.normal?new Float32Array(o):void 0,r=e.tangent?new Float32Array(o):void 0,i=e.bitangent?new Float32Array(o):void 0,s=0,l=0,u=0,c=!0,m=Yt,p=Ut,h=Bt;if(e.normal||e.tangent||e.bitangent)for(let f=0;f<o;f+=6){let g=w.fromArray(t,f,Tt),d=w.fromArray(t,(f+6)%o,Ct);if(c){let e=w.fromArray(t,(f+3)%o,jt);w.subtract(d,g,d),w.subtract(e,g,e),h=w.normalize(w.cross(e,d,h),h),c=!1}w.equalsEpsilon(d,g,I.EPSILON10)&&(c=!0),(e.tangent||e.bitangent)&&(m=n.geodeticSurfaceNormal(g,m),e.tangent&&(p=w.normalize(w.cross(m,h,p),p))),e.normal&&(a[s++]=h.x,a[s++]=h.y,a[s++]=h.z,a[s++]=h.x,a[s++]=h.y,a[s++]=h.z),e.tangent&&(r[l++]=p.x,r[l++]=p.y,r[l++]=p.z,r[l++]=p.x,r[l++]=p.y,r[l++]=p.z),e.bitangent&&(i[u++]=m.x,i[u++]=m.y,i[u++]=m.z,i[u++]=m.x,i[u++]=m.y,i[u++]=m.z)}return Xt(e,{positions:t,normals:a,tangents:r,bitangents:i})}function It(t,e){let n=t._vertexFormat,o=t._ellipsoid,a=e.height,r=e.width,i=e.northCap,s=e.southCap,l=0,u=a,c=a,m=0;i&&(l=1,c-=1,m+=1),s&&(u-=1,c-=1,m+=1),m+=r*c;let p=n.position?new Float64Array(3*m):void 0,h=n.st?new Float32Array(2*m):void 0,f=0,g=0,d=Tt,w=Zt,y=Number.MAX_VALUE,_=Number.MAX_VALUE,b=-Number.MAX_VALUE,A=-Number.MAX_VALUE;for(let t=l;t<u;++t)for(let a=0;a<r;++a)W.computePosition(e,o,n.st,t,a,d,w),p[f++]=d.x,p[f++]=d.y,p[f++]=d.z,n.st&&(h[g++]=w.x,h[g++]=w.y,y=Math.min(y,w.x),_=Math.min(_,w.y),b=Math.max(b,w.x),A=Math.max(A,w.y));if(i&&(W.computePosition(e,o,n.st,0,0,d,w),p[f++]=d.x,p[f++]=d.y,p[f++]=d.z,n.st&&(h[g++]=w.x,h[g++]=w.y,y=w.x,_=w.y,b=w.x,A=w.y)),s&&(W.computePosition(e,o,n.st,a-1,0,d,w),p[f++]=d.x,p[f++]=d.y,p[f]=d.z,n.st&&(h[g++]=w.x,h[g]=w.y,y=Math.min(y,w.x),_=Math.min(_,w.y),b=Math.max(b,w.x),A=Math.max(A,w.y))),n.st&&(y<0||_<0||b>1||A>1))for(let t=0;t<h.length;t+=2)h[t]=(h[t]-y)/(b-y),h[t+1]=(h[t+1]-_)/(A-_);let v=Gt(p,n,o,e.tangentRotationMatrix),E=6*(r-1)*(c-1);i&&(E+=3*(r-1)),s&&(E+=3*(r-1));let x,F=At.createTypedArray(m,E),P=0,k=0;for(x=0;x<c-1;++x){for(let t=0;t<r-1;++t){let t=P,e=t+r,n=e+1,o=t+1;F[k++]=t,F[k++]=e,F[k++]=o,F[k++]=o,F[k++]=e,F[k++]=n,++P}++P}if(i||s){let t,e,n=m-1,o=m-1;if(i&&s&&(n=m-2),P=0,i)for(x=0;x<r-1;x++)t=P,e=t+1,F[k++]=n,F[k++]=t,F[k++]=e,++P;if(s)for(P=(c-1)*r,x=0;x<r-1;x++)t=P,e=t+1,F[k++]=t,F[k++]=o,F[k++]=e,++P}return v.indices=F,n.st&&(v.attributes.st=new Y({componentDatatype:U.FLOAT,componentsPerAttribute:2,values:h})),v}function ut(t,e,n,o,a){return t[e++]=o[n],t[e++]=o[n+1],t[e++]=o[n+2],t[e++]=a[n],t[e++]=a[n+1],t[e]=a[n+2],t}function ht(t,e,n,o){return t[e++]=o[n],t[e++]=o[n+1],t[e++]=o[n],t[e]=o[n+1],t}var Dt=new q;function ee(t,e){let n,o=t._shadowVolume,a=t._offsetAttribute,r=t._vertexFormat,i=t._extrudedHeight,s=t._surfaceHeight,l=t._ellipsoid,u=e.height,c=e.width;if(o){let e=q.clone(r,Dt);e.normal=!0,t._vertexFormat=e}let m=It(t,e);o&&(t._vertexFormat=r);let p=yt.scaleToGeodeticHeight(m.attributes.position.values,s,l,!1);p=new Float64Array(p);let h=p.length,f=2*h,g=new Float64Array(f);g.set(p);let d=yt.scaleToGeodeticHeight(m.attributes.position.values,i,l);g.set(d,h),m.attributes.position.values=g;let y,_,b=r.normal?new Float32Array(f):void 0,A=r.tangent?new Float32Array(f):void 0,v=r.bitangent?new Float32Array(f):void 0,E=r.st?new Float32Array(f/3*2):void 0;if(r.normal){for(_=m.attributes.normal.values,b.set(_),n=0;n<h;n++)_[n]=-_[n];b.set(_,h),m.attributes.normal.values=b}if(o){_=m.attributes.normal.values,r.normal||(m.attributes.normal=void 0);let t=new Float32Array(f);for(n=0;n<h;n++)_[n]=-_[n];t.set(_,h),m.attributes.extrudeDirection=new Y({componentDatatype:U.FLOAT,componentsPerAttribute:3,values:t})}let x,F=K(a);if(F){let t=h/3*2,e=new Uint8Array(t);a===ft.TOP?e=e.fill(1,0,t/2):(x=a===ft.NONE?0:1,e=e.fill(x)),m.attributes.applyOffset=new Y({componentDatatype:U.UNSIGNED_BYTE,componentsPerAttribute:1,values:e})}if(r.tangent){let t=m.attributes.tangent.values;for(A.set(t),n=0;n<h;n++)t[n]=-t[n];A.set(t,h),m.attributes.tangent.values=A}if(r.bitangent){let t=m.attributes.bitangent.values;v.set(t),v.set(t,h),m.attributes.bitangent.values=v}r.st&&(y=m.attributes.st.values,E.set(y),E.set(y,h/3*2),m.attributes.st.values=E);let P=m.indices,k=P.length,D=h/3,O=At.createTypedArray(f/3,2*k);for(O.set(P),n=0;n<k;n+=3)O[n+k]=P[n+2]+D,O[n+1+k]=P[n+1]+D,O[n+2+k]=P[n]+D;m.indices=O;let R=e.northCap,L=e.southCap,T=u,N=2,G=0,j=4,M=4;R&&(N-=1,T-=1,G+=1,j-=2,M-=1),L&&(N-=1,T-=1,G+=1,j-=2,M-=1),G+=N*c+2*T-j;let S=2*(G+M),H=new Float64Array(3*S),C=o?new Float32Array(3*S):void 0,V=F?new Uint8Array(S):void 0,J=r.st?new Float32Array(2*S):void 0,z=a===ft.TOP;F&&!z&&(x=a===ft.ALL?1:0,V=V.fill(x));let W,X=0,B=0,$=0,Q=0,Z=c*T;for(n=0;n<Z;n+=c)W=3*n,H=ut(H,X,W,p,d),X+=6,r.st&&(J=ht(J,B,2*n,y),B+=4),o&&($+=3,C[$++]=_[W],C[$++]=_[W+1],C[$++]=_[W+2]),z&&(V[Q++]=1,Q+=1);if(L){let t=R?Z+1:Z;for(W=3*t,n=0;n<2;n++)H=ut(H,X,W,p,d),X+=6,r.st&&(J=ht(J,B,2*t,y),B+=4),o&&($+=3,C[$++]=_[W],C[$++]=_[W+1],C[$++]=_[W+2]),z&&(V[Q++]=1,Q+=1)}else for(n=Z-c;n<Z;n++)W=3*n,H=ut(H,X,W,p,d),X+=6,r.st&&(J=ht(J,B,2*n,y),B+=4),o&&($+=3,C[$++]=_[W],C[$++]=_[W+1],C[$++]=_[W+2]),z&&(V[Q++]=1,Q+=1);for(n=Z-1;n>0;n-=c)W=3*n,H=ut(H,X,W,p,d),X+=6,r.st&&(J=ht(J,B,2*n,y),B+=4),o&&($+=3,C[$++]=_[W],C[$++]=_[W+1],C[$++]=_[W+2]),z&&(V[Q++]=1,Q+=1);if(R){let t=Z;for(W=3*t,n=0;n<2;n++)H=ut(H,X,W,p,d),X+=6,r.st&&(J=ht(J,B,2*t,y),B+=4),o&&($+=3,C[$++]=_[W],C[$++]=_[W+1],C[$++]=_[W+2]),z&&(V[Q++]=1,Q+=1)}else for(n=c-1;n>=0;n--)W=3*n,H=ut(H,X,W,p,d),X+=6,r.st&&(J=ht(J,B,2*n,y),B+=4),o&&($+=3,C[$++]=_[W],C[$++]=_[W+1],C[$++]=_[W+2]),z&&(V[Q++]=1,Q+=1);let tt=te(H,r,l);r.st&&(tt.attributes.st=new Y({componentDatatype:U.FLOAT,componentsPerAttribute:2,values:J})),o&&(tt.attributes.extrudeDirection=new Y({componentDatatype:U.FLOAT,componentsPerAttribute:3,values:C})),F&&(tt.attributes.applyOffset=new Y({componentDatatype:U.UNSIGNED_BYTE,componentsPerAttribute:1,values:V}));let et,nt,ot,at,rt=At.createTypedArray(S,6*G);h=H.length/3;let it=0;for(n=0;n<h-1;n+=2){et=n,at=(et+2)%h;let t=w.fromArray(H,3*et,Ct),e=w.fromArray(H,3*at,jt);w.equalsEpsilon(t,e,I.EPSILON10)||(nt=(et+1)%h,ot=(nt+2)%h,rt[it++]=et,rt[it++]=nt,rt[it++]=at,rt[it++]=at,rt[it++]=nt,rt[it++]=ot)}return tt.indices=rt,tt=zt.combineInstances([new Nt({geometry:m}),new Nt({geometry:tt})]),tt[0]}var ne=[new w,new w,new w,new w],Wt=new mt,oe=new mt;function Ht(t,e,n,o,a){if(0===n)return E.clone(t,a);let r=W.computeOptions(t,e,n,0,qt,Wt),i=r.height,s=r.width,l=ne;return W.computePosition(r,o,!1,0,0,l[0]),W.computePosition(r,o,!1,0,s-1,l[1]),W.computePosition(r,o,!1,i-1,0,l[2]),W.computePosition(r,o,!1,i-1,s-1,l[3]),E.fromCartesianArray(l,o,a)}function J(t){let e=(t=t??St.EMPTY_OBJECT).rectangle;if(ct.typeOf.object("rectangle",e),E._validate(e),e.north<e.south)throw new Et("options.rectangle.north must be greater than or equal to options.rectangle.south");let n=t.height??0,o=t.extrudedHeight??n;this._rectangle=E.clone(e),this._granularity=t.granularity??I.RADIANS_PER_DEGREE,this._ellipsoid=D.clone(t.ellipsoid??D.default),this._surfaceHeight=Math.max(n,o),this._rotation=t.rotation??0,this._stRotation=t.stRotation??0,this._vertexFormat=q.clone(t.vertexFormat??q.DEFAULT),this._extrudedHeight=Math.min(n,o),this._shadowVolume=t.shadowVolume??!1,this._workerName="createRectangleGeometry",this._offsetAttribute=t.offsetAttribute,this._rotatedRectangle=void 0,this._textureCoordinateRotationPoints=void 0}J.packedLength=E.packedLength+D.packedLength+q.packedLength+7,J.pack=function(t,e,n){return ct.typeOf.object("value",t),ct.defined("array",e),n=n??0,E.pack(t._rectangle,e,n),n+=E.packedLength,D.pack(t._ellipsoid,e,n),n+=D.packedLength,q.pack(t._vertexFormat,e,n),n+=q.packedLength,e[n++]=t._granularity,e[n++]=t._surfaceHeight,e[n++]=t._rotation,e[n++]=t._stRotation,e[n++]=t._extrudedHeight,e[n++]=t._shadowVolume?1:0,e[n]=t._offsetAttribute??-1,e};var Jt=new E,Qt=D.clone(D.UNIT_SPHERE),G={rectangle:Jt,ellipsoid:Qt,vertexFormat:Dt,granularity:void 0,height:void 0,rotation:void 0,stRotation:void 0,extrudedHeight:void 0,shadowVolume:void 0,offsetAttribute:void 0};J.unpack=function(t,e,n){ct.defined("array",t),e=e??0;let o=E.unpack(t,e,Jt);e+=E.packedLength;let a=D.unpack(t,e,Qt);e+=D.packedLength;let r=q.unpack(t,e,Dt);e+=q.packedLength;let i=t[e++],s=t[e++],l=t[e++],u=t[e++],c=t[e++],m=1===t[e++],p=t[e];return K(n)?(n._rectangle=E.clone(o,n._rectangle),n._ellipsoid=D.clone(a,n._ellipsoid),n._vertexFormat=q.clone(r,n._vertexFormat),n._granularity=i,n._surfaceHeight=s,n._rotation=l,n._stRotation=u,n._extrudedHeight=c,n._shadowVolume=m,n._offsetAttribute=-1===p?void 0:p,n):(G.granularity=i,G.height=s,G.rotation=l,G.stRotation=u,G.extrudedHeight=c,G.shadowVolume=m,G.offsetAttribute=-1===p?void 0:p,new J(G))},J.computeRectangle=function(t,e){let n=(t=t??St.EMPTY_OBJECT).rectangle;if(ct.typeOf.object("rectangle",n),E._validate(n),n.north<n.south)throw new Et("options.rectangle.north must be greater than or equal to options.rectangle.south");let o=t.granularity??I.RADIANS_PER_DEGREE,a=t.ellipsoid??D.default;return Ht(n,o,t.rotation??0,a,e)};var ie=new lt,Ft=new Lt,ae=new mt;J.createGeometry=function(t){if(I.equalsEpsilon(t._rectangle.north,t._rectangle.south,I.EPSILON10)||I.equalsEpsilon(t._rectangle.east,t._rectangle.west,I.EPSILON10))return;let e=t._rectangle,n=t._ellipsoid,o=t._rotation,a=t._stRotation,r=t._vertexFormat,i=W.computeOptions(e,t._granularity,o,a,qt,Wt,oe),s=ie;if(0!==a||0!==o){let t=E.center(e,ae),o=n.geodeticSurfaceNormalCartographic(t,Ct);Lt.fromAxisAngle(o,-a,Ft),lt.fromQuaternion(Ft,s)}else lt.clone(lt.IDENTITY,s);let l,u,c=t._surfaceHeight,m=t._extrudedHeight,p=!I.equalsEpsilon(c,m,0,I.EPSILON2);if(i.lonScalar=1/t._rectangle.width,i.latScalar=1/t._rectangle.height,i.tangentRotationMatrix=s,e=t._rectangle,p){l=ee(t,i);let o=at.fromRectangle3D(e,n,c,$t),a=at.fromRectangle3D(e,n,m,Kt);u=at.union(o,a)}else{if(l=It(t,i),l.attributes.position.values=yt.scaleToGeodeticHeight(l.attributes.position.values,c,n,!1),K(t._offsetAttribute)){let e=l.attributes.position.values.length,n=t._offsetAttribute===ft.NONE?0:1,o=new Uint8Array(e/3).fill(n);l.attributes.applyOffset=new Y({componentDatatype:U.UNSIGNED_BYTE,componentsPerAttribute:1,values:o})}u=at.fromRectangle3D(e,n,c)}return r.position||delete l.attributes.position,new Pt({attributes:l.attributes,indices:l.indices,primitiveType:l.primitiveType,boundingSphere:u,offsetAttribute:t._offsetAttribute})},J.createShadowVolume=function(t,e,n){let o=t._granularity,a=t._ellipsoid,r=e(o,a),i=n(o,a);return new J({rectangle:t._rectangle,rotation:t._rotation,ellipsoid:a,stRotation:t._stRotation,granularity:o,extrudedHeight:i,height:r,vertexFormat:q.POSITION_ONLY,shadowVolume:!0})};var vt=new E,se=[new $,new $,new $],re=new bt,ce=new mt;function le(t){if(0===t._stRotation)return[0,0,0,1,1,0];let e=E.clone(t._rectangle,vt),n=t._granularity,o=t._ellipsoid,a=Ht(e,n,t._rotation-t._stRotation,o,vt),r=se;r[0].x=a.west,r[0].y=a.south,r[1].x=a.west,r[1].y=a.north,r[2].x=a.east,r[2].y=a.south;let i=t.rectangle,s=bt.fromRotation(t._stRotation,re),l=E.center(i,ce);for(let t=0;t<3;++t){let e=r[t];e.x-=l.longitude,e.y-=l.latitude,bt.multiplyByVector(s,e,e),e.x+=l.longitude,e.y+=l.latitude,e.x=(e.x-i.west)/i.width,e.y=(e.y-i.south)/i.height}let u=r[0],c=r[1],m=r[2],p=new Array(6);return $.pack(u,p),$.pack(c,p,2),$.pack(m,p,4),p}Object.defineProperties(J.prototype,{rectangle:{get:function(){return K(this._rotatedRectangle)||(this._rotatedRectangle=Ht(this._rectangle,this._granularity,this._rotation,this._ellipsoid)),this._rotatedRectangle}},textureCoordinateRotationPoints:{get:function(){return K(this._textureCoordinateRotationPoints)||(this._textureCoordinateRotationPoints=le(this)),this._textureCoordinateRotationPoints}}});var Ot=J;function fe(t,e){return K(e)&&(t=Ot.unpack(t,e)),t._ellipsoid=D.clone(t._ellipsoid),t._rectangle=E.clone(t._rectangle),Ot.createGeometry(t)}var Ye=fe;export{Ye as default};