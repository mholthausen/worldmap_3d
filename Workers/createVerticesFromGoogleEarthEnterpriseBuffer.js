/*! For license information please see createVerticesFromGoogleEarthEnterpriseBuffer.js.LICENSE.txt */
import{a as Gt,b as Xt}from"./chunk-RILDKADO.js";import{a as kt}from"./chunk-2SKW2VRQ.js";import{a as lt}from"./chunk-EXJ3OQJJ.js";import{a as Dt}from"./chunk-PYQRNF73.js";import"./chunk-IYTTCRXN.js";import"./chunk-QCBYIBZJ.js";import{a as qt}from"./chunk-5XT3QCZD.js";import"./chunk-ZKNXHPHD.js";import"./chunk-W5ZMPE2M.js";import{d as zt,i as Lt}from"./chunk-YIFABOF6.js";import"./chunk-PQVQONHO.js";import{b as $,c as Ot,d as wt}from"./chunk-KDW4RGIR.js";import"./chunk-VNDUYYBJ.js";import{a as P,b as N,c as Ht}from"./chunk-V624RX7A.js";import{a as r}from"./chunk-VZ2RFJ3P.js";import"./chunk-RN5GA5QZ.js";import{a as Vt}from"./chunk-TWC6ISJU.js";import{a as Ut}from"./chunk-RKPKWH3Z.js";import"./chunk-BIYNNQRQ.js";import{e as ht}from"./chunk-ZLUSVROX.js";var te=Uint16Array.BYTES_PER_ELEMENT,mt=Int32Array.BYTES_PER_ELEMENT,Pt=Uint32Array.BYTES_PER_ELEMENT,ee=Float32Array.BYTES_PER_ELEMENT,H=Float64Array.BYTES_PER_ELEMENT;function tt(t,e,n){n=Ut(n,r);let i=t.length;for(let o=0;o<i;++o)if(n.equalsEpsilon(t[o],e,r.EPSILON12))return o;return-1}function oe(t,e){t.ellipsoid=Ht.clone(t.ellipsoid),t.rectangle=Ot.clone(t.rectangle);let n=se(t.buffer,t.relativeToCenter,t.ellipsoid,t.rectangle,t.nativeRectangle,t.exaggeration,t.exaggerationRelativeHeight,t.skirtHeight,t.includeWebMercatorT,t.negativeAltitudeExponentBias,t.negativeElevationThreshold),i=n.vertices;e.push(i.buffer);let r=n.indices;return e.push(r.buffer),{vertices:i.buffer,indices:r.buffer,numberOfAttributes:n.encoding.stride,minimumHeight:n.minimumHeight,maximumHeight:n.maximumHeight,boundingSphere3D:n.boundingSphere3D,orientedBoundingBox:n.orientedBoundingBox,occludeePointInScaledSpace:n.occludeePointInScaledSpace,encoding:n.encoding,vertexCountWithoutSkirts:n.vertexCountWithoutSkirts,indexCountWithoutSkirts:n.indexCountWithoutSkirts,westIndicesSouthToNorth:n.westIndicesSouthToNorth,southIndicesEastToWest:n.southIndicesEastToWest,eastIndicesNorthToSouth:n.eastIndicesNorthToSouth,northIndicesWestToEast:n.northIndicesWestToEast}}var u=new N,G=new P,ne=new P,ie=new P,re=new $;function se(t,e,n,i,o,a,s,l,h,c,m){let d,g,p,I,f,E;ht(i)?(d=i.west,g=i.south,p=i.east,I=i.north,f=i.width,E=i.height):(d=r.toRadians(o.west),g=r.toRadians(o.south),p=r.toRadians(o.east),I=r.toRadians(o.north),f=r.toRadians(i.width),E=r.toRadians(i.height));let T,x,R=[g,I],S=[d,p],w=Lt.eastNorthUpToFixedFrame(e,n),k=$.inverseTransformation(w,re);h&&(T=lt.geodeticLatitudeToMercatorAngle(g),x=1/(lt.geodeticLatitudeToMercatorAngle(I)-T));let A=1!==a,b=new DataView(t),B=Number.POSITIVE_INFINITY,y=Number.NEGATIVE_INFINITY,F=ne;F.x=Number.POSITIVE_INFINITY,F.y=Number.POSITIVE_INFINITY,F.z=Number.POSITIVE_INFINITY;let v=ie;v.x=Number.NEGATIVE_INFINITY,v.y=Number.NEGATIVE_INFINITY,v.z=Number.NEGATIVE_INFINITY;let M,_,j=0,W=0,Y=0;for(_=0;_<4;++_){let t=j;M=b.getUint32(t,!0),t+=Pt;let e=r.toRadians(180*b.getFloat64(t,!0));t+=H,-1===tt(S,e)&&S.push(e);let n=r.toRadians(180*b.getFloat64(t,!0));t+=H,-1===tt(R,n)&&R.push(n),t+=2*H;let i=b.getInt32(t,!0);t+=mt,W+=i,i=b.getInt32(t,!0),Y+=3*i,j+=M+Pt}let V=[],C=[],O=new Array(W),U=new Array(W),L=new Array(W),D=h?new Array(W):[],Q=A?new Array(W):[],X=new Array(Y),Z=[],J=[],K=[],z=[],q=0,et=0;for(j=0,_=0;_<4;++_){M=b.getUint32(j,!0),j+=Pt;let t=j,e=r.toRadians(180*b.getFloat64(j,!0));j+=H;let i=r.toRadians(180*b.getFloat64(j,!0));j+=H;let o=r.toRadians(180*b.getFloat64(j,!0)),a=.5*o;j+=H;let s=r.toRadians(180*b.getFloat64(j,!0)),l=.5*s;j+=H;let f=b.getInt32(j,!0);j+=mt;let E=b.getInt32(j,!0);j+=mt,j+=mt;let w=new Array(f);for(let t=0;t<f;++t){let f=e+b.getUint8(j++)*o;u.longitude=f;let E=i+b.getUint8(j++)*s;u.latitude=E;let H=b.getFloat32(j,!0);if(j+=ee,0!==H&&H<m&&(H*=-Math.pow(2,c)),H*=6371010,u.height=H,-1!==tt(S,f)||-1!==tt(R,E)){let e=tt(V,u,N);if(-1!==e){w[t]=C[e];continue}V.push(N.clone(u)),C.push(q)}w[t]=q,Math.abs(f-d)<a?Z.push({index:q,cartographic:N.clone(u)}):Math.abs(f-p)<a?K.push({index:q,cartographic:N.clone(u)}):Math.abs(E-g)<l?J.push({index:q,cartographic:N.clone(u)}):Math.abs(E-I)<l&&z.push({index:q,cartographic:N.clone(u)}),B=Math.min(H,B),y=Math.max(H,y),L[q]=H;let M=n.cartographicToCartesian(u);if(O[q]=M,h&&(D[q]=(lt.geodeticLatitudeToMercatorAngle(E)-T)*x),A){let t=n.geodeticSurfaceNormal(M);Q[q]=t}$.multiplyByPoint(k,M,G),P.minimumByComponent(G,F,F),P.maximumByComponent(G,v,v);let _=(f-d)/(p-d);_=r.clamp(_,0,1);let W=(E-g)/(I-g);W=r.clamp(W,0,1),U[q]=new wt(_,W),++q}let _=3*E;for(let t=0;t<_;++t,++et)X[et]=w[b.getUint16(j,!0)],j+=te;if(M!==j-t)throw new Vt("Invalid terrain tile.")}O.length=q,U.length=q,L.length=q,h&&(D.length=q),A&&(Q.length=q);let nt=q,it=et,rt={hMin:B,lastBorderPoint:void 0,skirtHeight:l,toENU:k,ellipsoid:n,minimum:F,maximum:v};Z.sort((function(t,e){return e.cartographic.latitude-t.cartographic.latitude})),J.sort((function(t,e){return t.cartographic.longitude-e.cartographic.longitude})),K.sort((function(t,e){return t.cartographic.latitude-e.cartographic.latitude})),z.sort((function(t,e){return e.cartographic.longitude-t.cartographic.longitude}));let ot=1e-5;if(gt(O,L,U,D,Q,X,rt,Z,-ot*f,!0,-ot*E),gt(O,L,U,D,Q,X,rt,J,-ot*E,!1),gt(O,L,U,D,Q,X,rt,K,ot*f,!0,ot*E),gt(O,L,U,D,Q,X,rt,z,ot*E,!1),Z.length>0&&z.length>0){let t=Z[0].index,e=nt,n=z[z.length-1].index,i=O.length-1;X.push(n,i,e,e,t,n)}W=O.length;let at,ut=zt.fromPoints(O);ht(i)&&(at=Dt.fromRectangle(i,B,y,n));let st=new Gt(n).computeHorizonCullingPointPossiblyUnderEllipsoid(e,O,B),ct=new qt(F,v,e),dt=new Xt(e,ct,rt.hMin,y,w,!1,h,A,a,s),pt=new Float32Array(W*dt.stride),It=0;for(let t=0;t<W;++t)It=dt.encode(pt,It,O[t],U[t],L[t],void 0,D[t],Q[t]);let Nt=Z.map((function(t){return t.index})).reverse(),ft=J.map((function(t){return t.index})).reverse(),Et=K.map((function(t){return t.index})).reverse(),Tt=z.map((function(t){return t.index})).reverse();return ft.unshift(Et[Et.length-1]),ft.push(Nt[0]),Tt.unshift(Nt[Nt.length-1]),Tt.push(Et[0]),{vertices:pt,indices:new Uint16Array(X),maximumHeight:y,minimumHeight:B,encoding:dt,boundingSphere3D:ut,orientedBoundingBox:at,occludeePointInScaledSpace:st,vertexCountWithoutSkirts:nt,indexCountWithoutSkirts:it,westIndicesSouthToNorth:Nt,southIndicesEastToWest:ft,eastIndicesNorthToSouth:Et,northIndicesWestToEast:Tt}}function gt(t,e,n,i,o,a,s,l,h,c,m){let d=l.length;for(let g=0;g<d;++g){let p=l[g],I=p.cartographic,f=p.index,E=t.length,T=I.longitude,x=I.latitude;x=r.clamp(x,-r.PI_OVER_TWO,r.PI_OVER_TWO);let R=I.height-s.skirtHeight;s.hMin=Math.min(s.hMin,R),N.fromRadians(T,x,R,u),c&&(u.longitude+=h),c?g===d-1?u.latitude+=m:0===g&&(u.latitude-=m):u.latitude+=h;let S=s.ellipsoid.cartographicToCartesian(u);t.push(S),e.push(R),n.push(wt.clone(n[f])),i.length>0&&i.push(i[f]),o.length>0&&o.push(o[f]),$.multiplyByPoint(s.toENU,S,G);let w=s.minimum,k=s.maximum;P.minimumByComponent(G,w,w),P.maximumByComponent(G,k,k);let A=s.lastBorderPoint;if(ht(A)){let t=A.index;a.push(t,E-1,E,E,f,t)}s.lastBorderPoint=p}}var Ae=kt(oe);export{Ae as default};