/*! For license information please see chunk-Y664VY52.js.LICENSE.txt */
import{a as wt}from"./chunk-N52FZRFP.js";import{a as k}from"./chunk-WIRUK4BS.js";import{a as kt}from"./chunk-JZL634RF.js";import{a as Ct}from"./chunk-3UAKIC5Y.js";import{b as dt,c as _t,d as R}from"./chunk-QEWKHB6D.js";import{d as pt}from"./chunk-DV7DPSRL.js";import{d as ht}from"./chunk-KCIWEUSR.js";import{a as N}from"./chunk-7XDW3BZW.js";import{a as s,c as ot}from"./chunk-F33YCXD2.js";import{a as M}from"./chunk-DUBQPPQZ.js";import{a as p}from"./chunk-K36PKEJW.js";import{a as z}from"./chunk-KD2PMTHD.js";import{e as E}from"./chunk-ZUCO5WNM.js";var yt=new s,vt=new s,Et=new s,Mt=new s,Nt=new s,Rt=new s(1,1,1),Pt=Math.cos,At=Math.sin;function O(t){t=p(t,p.EMPTY_OBJECT);let e=p(t.radii,Rt),i=p(t.innerRadii,e),n=p(t.minimumClock,0),r=p(t.maximumClock,M.TWO_PI),a=p(t.minimumCone,0),o=p(t.maximumCone,M.PI),m=Math.round(p(t.stackPartitions,64)),c=Math.round(p(t.slicePartitions,64)),u=p(t.vertexFormat,k.DEFAULT);if(c<3)throw new z("options.slicePartitions cannot be less than three.");if(m<3)throw new z("options.stackPartitions cannot be less than three.");this._radii=s.clone(e),this._innerRadii=s.clone(i),this._minimumClock=n,this._maximumClock=r,this._minimumCone=a,this._maximumCone=o,this._stackPartitions=m,this._slicePartitions=c,this._vertexFormat=k.clone(u),this._offsetAttribute=t.offsetAttribute,this._workerName="createEllipsoidGeometry"}O.packedLength=2*s.packedLength+k.packedLength+7,O.pack=function(t,e,i){if(!E(t))throw new z("value is required");if(!E(e))throw new z("array is required");return i=p(i,0),s.pack(t._radii,e,i),i+=s.packedLength,s.pack(t._innerRadii,e,i),i+=s.packedLength,k.pack(t._vertexFormat,e,i),i+=k.packedLength,e[i++]=t._minimumClock,e[i++]=t._maximumClock,e[i++]=t._minimumCone,e[i++]=t._maximumCone,e[i++]=t._stackPartitions,e[i++]=t._slicePartitions,e[i]=p(t._offsetAttribute,-1),e};var mt,bt=new s,xt=new s,Ot=new k,y={radii:bt,innerRadii:xt,vertexFormat:Ot,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,offsetAttribute:void 0};O.unpack=function(t,e,i){if(!E(t))throw new z("array is required");e=p(e,0);let n=s.unpack(t,e,bt);e+=s.packedLength;let r=s.unpack(t,e,xt);e+=s.packedLength;let a=k.unpack(t,e,Ot);e+=k.packedLength;let o=t[e++],m=t[e++],c=t[e++],u=t[e++],l=t[e++],f=t[e++],h=t[e];return E(i)?(i._radii=s.clone(n,i._radii),i._innerRadii=s.clone(r,i._innerRadii),i._vertexFormat=k.clone(a,i._vertexFormat),i._minimumClock=o,i._maximumClock=m,i._minimumCone=c,i._maximumCone=u,i._stackPartitions=l,i._slicePartitions=f,i._offsetAttribute=-1===h?void 0:h,i):(y.minimumClock=o,y.maximumClock=m,y.minimumCone=c,y.maximumCone=u,y.stackPartitions=l,y.slicePartitions=f,y.offsetAttribute=-1===h?void 0:h,new O(y))},O.createGeometry=function(t){let e=t._radii;if(e.x<=0||e.y<=0||e.z<=0)return;let i=t._innerRadii;if(i.x<=0||i.y<=0||i.z<=0)return;let n=t._minimumClock,r=t._maximumClock,a=t._minimumCone,o=t._maximumCone,m=t._vertexFormat,c=t._slicePartitions+1,u=t._stackPartitions+1;c=Math.round(c*Math.abs(r-n)/M.TWO_PI),u=Math.round(u*Math.abs(o-a)/M.PI),c<2&&(c=2),u<2&&(u=2);let l,f,p=0,k=[a],h=[n];for(l=0;l<u;l++)k.push(a+l*(o-a)/(u-1));for(k.push(o),f=0;f<c;f++)h.push(n+f*(r-n)/(c-1));h.push(r);let _=k.length,d=h.length,y=0,w=1,P=i.x!==e.x||i.y!==e.y||i.z!==e.z,A=!1,C=!1,x=!1;P&&(w=2,a>0&&(A=!0,y+=c-1),o<Math.PI&&(C=!0,y+=c-1),(r-n)%M.TWO_PI?(x=!0,y+=2*(u-1)+1):y+=1);let v=d*_*w,b=new Float64Array(3*v),g=new Array(v).fill(!1),O=new Array(v).fill(!1),F=c*u*w,L=6*(F+y+1-(c+u)*w),T=kt.createTypedArray(F,L),z=m.normal?new Float32Array(3*v):void 0,D=m.tangent?new Float32Array(3*v):void 0,I=m.bitangent?new Float32Array(3*v):void 0,j=m.st?new Float32Array(2*v):void 0,U=new Array(_),W=new Array(_);for(l=0;l<_;l++)U[l]=At(k[l]),W[l]=Pt(k[l]);let K=new Array(d),S=new Array(d);for(f=0;f<d;f++)S[f]=Pt(h[f]),K[f]=At(h[f]);for(l=0;l<_;l++)for(f=0;f<d;f++)b[p++]=e.x*U[l]*S[f],b[p++]=e.y*U[l]*K[f],b[p++]=e.z*W[l];let B,Z,G,Y,q=v/2;if(P)for(l=0;l<_;l++)for(f=0;f<d;f++)b[p++]=i.x*U[l]*S[f],b[p++]=i.y*U[l]*K[f],b[p++]=i.z*W[l],g[q]=!0,l>0&&l!==_-1&&0!==f&&f!==d-1&&(O[q]=!0),q++;for(p=0,l=1;l<_-2;l++)for(B=l*d,Z=(l+1)*d,f=1;f<d-2;f++)T[p++]=Z+f,T[p++]=Z+f+1,T[p++]=B+f+1,T[p++]=Z+f,T[p++]=B+f+1,T[p++]=B+f;if(P){let t=_*d;for(l=1;l<_-2;l++)for(B=t+l*d,Z=t+(l+1)*d,f=1;f<d-2;f++)T[p++]=Z+f,T[p++]=B+f,T[p++]=B+f+1,T[p++]=Z+f,T[p++]=B+f+1,T[p++]=Z+f+1}if(P){if(A)for(Y=_*d,l=1;l<d-2;l++)T[p++]=l,T[p++]=l+1,T[p++]=Y+l+1,T[p++]=l,T[p++]=Y+l+1,T[p++]=Y+l;if(C)for(G=_*d-d,Y=_*d*w-d,l=1;l<d-2;l++)T[p++]=G+l+1,T[p++]=G+l,T[p++]=Y+l,T[p++]=G+l+1,T[p++]=Y+l,T[p++]=Y+l+1}if(x){for(l=1;l<_-2;l++)Y=d*_+d*l,G=d*l,T[p++]=Y,T[p++]=G+d,T[p++]=G,T[p++]=Y,T[p++]=Y+d,T[p++]=G+d;for(l=1;l<_-2;l++)Y=d*_+d*(l+1)-1,G=d*(l+1)-1,T[p++]=G+d,T[p++]=Y,T[p++]=G,T[p++]=G+d,T[p++]=Y+d,T[p++]=Y}let J=new Ct;m.position&&(J.position=new R({componentDatatype:N.DOUBLE,componentsPerAttribute:3,values:b}));let Q,X=0,H=0,V=0,$=0,tt=v/2,et=ot.fromCartesian3(e),it=ot.fromCartesian3(i);if(m.st||m.normal||m.tangent||m.bitangent){for(l=0;l<v;l++){Q=g[l]?it:et;let t=s.fromArray(b,3*l,yt),e=Q.geodeticSurfaceNormal(t,vt);if(O[l]&&s.negate(e,e),m.st){let t=ht.negate(e,Nt);j[X++]=Math.atan2(t.y,t.x)/M.TWO_PI+.5,j[X++]=Math.asin(e.z)/Math.PI+.5}if(m.normal&&(z[H++]=e.x,z[H++]=e.y,z[H++]=e.z),m.tangent||m.bitangent){let t,i=Et,n=0;if(g[l]&&(n=tt),t=!A&&l>=n&&l<n+2*d?s.UNIT_X:s.UNIT_Z,s.cross(t,e,i),s.normalize(i,i),m.tangent&&(D[V++]=i.x,D[V++]=i.y,D[V++]=i.z),m.bitangent){let t=s.cross(e,i,Mt);s.normalize(t,t),I[$++]=t.x,I[$++]=t.y,I[$++]=t.z}}}m.st&&(J.st=new R({componentDatatype:N.FLOAT,componentsPerAttribute:2,values:j})),m.normal&&(J.normal=new R({componentDatatype:N.FLOAT,componentsPerAttribute:3,values:z})),m.tangent&&(J.tangent=new R({componentDatatype:N.FLOAT,componentsPerAttribute:3,values:D})),m.bitangent&&(J.bitangent=new R({componentDatatype:N.FLOAT,componentsPerAttribute:3,values:I}))}if(E(t._offsetAttribute)){let e=b.length,i=t._offsetAttribute===wt.NONE?0:1,n=new Uint8Array(e/3).fill(i);J.applyOffset=new R({componentDatatype:N.UNSIGNED_BYTE,componentsPerAttribute:1,values:n})}return new _t({attributes:J,indices:T,primitiveType:dt.TRIANGLES,boundingSphere:pt.fromEllipsoid(et),offsetAttribute:t._offsetAttribute})},O.getUnitEllipsoid=function(){return E(mt)||(mt=O.createGeometry(new O({radii:new s(1,1,1),vertexFormat:k.POSITION_ONLY}))),mt};var Kt=O;export{Kt as a};